<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.1//EN"
                      "/usr/share/sgml/docbook/sgml-dtd-4.1/docbook.dtd" [
]>

<!--

        Aim is to keep this both SGML and XML compliant so it can be
        processed with any of Jade, Xalan etc.

        Note that this file will be broken into separate entities when it
        grows too big.

-->

<!--
        First priorities:

        Docbook stuff. How to get and use.
        Collate existing documentation and add.
        Add recent bootcamp material.
        Trawl mailing list and start FAQ.
        Add Ant task to build docs and link to Javadoc.

-->

<book id="biojava-main">
  <title>The BioJava Documentation</title>
  
  <bookinfo>
    <!-- Add your name as a collaborative author if you contribute.
    Authors are in alphabetical order. -->
    <authorgroup>
      <collab>
        <collabname>Thomas Down</collabname>
        <affiliation>
          <orgname>The Wellcome Trust Sanger Institute</orgname>
        </affiliation>
      </collab>
      <collab>
        <collabname>Keith James</collabname>
        <affiliation>
          <orgname>The Wellcome Trust Sanger Institute</orgname>
        </affiliation>
      </collab>
      <collab>
        <collabname>Matthew Pocock</collabname>
      </collab>
    </authorgroup>

    <!-- Change this to reflect the current editor -->
    <editor>
      <firstname>Keith</firstname>
      <surname>James</surname>
      <affiliation>
        <orgname>The Wellcome Trust Sanger Institute</orgname>
      </affiliation>
    </editor>

    <!-- Increment only for major changes and CVS will track
    everything else -->
    <revhistory>
      <revision>
        <revnumber>1</revnumber>
        <!-- Please use this ISO standard for representing dates -->
        <date>2002/03/26</date>
        <authorinitials>KJ</authorinitials>
        <revdescription>
          <para>Initial draft</para>
        </revdescription>        
      </revision>
    </revhistory>
  </bookinfo>

  <!-- This demonstrates the id convention for a preface -->
  <preface id="bd-pre01">
    <title>Foreward</title>

    <para>The <ulink url="http://biojava.org">BioJava Project</ulink>
    is an open-source project dedicated to providing <ulink
    url="http://java.sun.com">Java</ulink> tools for processing
    biological data. The BioJava library is useful for automating
    those daily and mundane bioinformatics tasks. As the library
    matures, the BioJava libraries will provide a foundation upon
    which both free software and commercial packages can be
    developed.</para>

    <para>The BioJava documentation aims to provide information about
    all aspects of BioJava and links to into other resources, such as
    the API documentation.</para>
  </preface>

  <preface id="bd-pre02">
    <title>Introduction to the documentation</title>

    <para>The documentation uses an SGML/XML-based authoring format
    (<ulink url="http://www.oasis-open.org/docbook/">DocBook</ulink>)
    which allows different types of output, including HTML and
    printable formats, to be generated from a single source without
    compromising quality or portability across computing platforms. To
    find out more about DocBook see <xref linkend="bd-apdx03">.</para>
  </preface>

  <!-- Table of contents is automatically generated here -->
  <toc></toc>

  <!-- This demonstrates the id convention for chapters -->
  <chapter id="bd-ch01">
    <title>Beginning BioJava</title>

    <sect1 id="bd-ch01-obtain">
      <title>Obtaining</title>

      <sect2 id="bd-ch01-obtain-bin">
        <title>Binary distribution</title>

        <para>Binary distributions in .jar (Java ARchive) format may
        be obtained from the <ulink
        url="http://biojava.org/download/binaries/">binaries
        directory</ulink> of the web site <ulink
        url="http://biojava.org/download/">download
        area</ulink>.</para>
      </sect2>

      <sect2 id="bd-ch01-obtain-src">
        <title>Source code distribution</title>

        <para>If you want to modify BioJava, you can obtain a copy of
        the source code from the <ulink
        url="http://biojava.org/download/source/">source
        directory</ulink> of the web site <ulink
        url="http://biojava.org/download/">download
        area</ulink>. Source releases are distributed in .tar.gz
        format for Unix machines and as ZIP archives for Windows
        users. You can also obtain up-to-the-minute source code from
        the <ulink url="http://cvs.biojava.org">anonymous CVS
        server</ulink>.</para>
      </sect2>

      <sect2 id="bd-ch01-obtain-cvs">
        <title>Anonymous CVS server</title>

        <para></para>
      </sect2>

      <sect2 id="bd-ch01-depend">
        <title>Dependencies</title>

        <para>BioJava will compile and run on any computer with a Java
        virtual machine complying to the Java 2 Standard Edition 1.2
        (or later) specifications.</para>

        <note>
          <para>We have seen some problems due to a bug in the Classic
          VM in Java 1.2. Hotspot for Java 1.2 works fine, as does the
          Classic VM from later releases.</para
        </note>

        <para>BioJava requires the following software packages:</para>
        <itemizedlist>
          <listitem>
            <para>A Java bytecode generation library
            (bytecode-0.90.jar) which may be obtained from the <ulink
            url="http://biojava.org/download/binaries/">binaries
            directory</ulink> of the web site <ulink
            url="http://biojava.org/download/">download
            area</ulink>.</para>
          </listitem>
          <listitem>
            <para>The <ulink url="http://xml.apache.org">Xerces-J XML
            parser</ulink>.</para>
          </listitem>
        </itemizedlist>
        
      </sect2>
    </sect1>

    <sect1 id="bd-ch01-install">
      <title>Installation</title>

      <sect2 id="bd-ch01-install-bin">
        <title>Binary distribution</title>

        <para>To use the binary distribution add the biojava.jar,
        bytecode.jar and xerces.jar files to your CLASSPATH
        environment variable.</para>

        <variablelist>
          <varlistentry>
            <term>UNIX (bourne shell)</term>
            <listitem>
              <para>
                <screen>
export CLASSPATH=/usr/local/share/java/biojava.jar:\
/usr/local/share/java/xerces.jar:\
/usr/local/share/java/bytecode.jar:.
                </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>UNIX (C shell)</term>
            <listitem>
              <para>
               <screen>
setenv CLASSPATH /usr/local/share/java/biojava.jar:\
/usr/local/share/java/xerces.jar:\
/usr/local/share/java/bytecode.jar:.
               </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Windows from command line</term>
            <listitem>
              <para>
               <screen>
set CLASSPATH C:\biojava.jar;C:\xerces.jar;C:\bytecode.jar;.
               </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Windows from autoexec.bat</term>
            <listitem>
              <para>
               <screen>
set CLASSPATH=C:\biojava.jar;C:\xerces.jar;C:\bytecode.jar;.
               </screen>
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>

      <sect2 id="bd-ch01-install-src">
        <title>Source distribution</title>

        <para>BioJava uses the <ulink
        url="http://jakarta.apache.org/ant">Ant build tool</ulink>, a
        Java equivalent of the common Make utilities. You will need to
        obtain and install a copy of Ant.</para>
      </sect2>
    </sect1>

    <sect1 id="bd-ch01-demos">
      <title>Running the demo programs</title>

      <para></para>
    </sect1>
  </chapter>

  <!-- This demonstrates the id convention for appendices -->
  <appendix label="A" id="bd-apdx01">
    <title>BioJava API JavaDoc</title>

    <itemizedlist>
      <listitem>
        <para><ulink url="javadoc/index.html">API overview with
        frames</ulink></para>
      </listitem>
      <listitem>
        <para><ulink url="javadoc/overview-summary.html">API overview
        without frames</ulink></para>
      </listitem>
      <listitem>
        <para><ulink url="javadoc/index-all.html">Full API
        index</ulink></para>
      </listitem>
    </itemizedlist>
  </appendix>

  <appendix label="B" id="bd-apdx02">
    <title>Style guide</title>

    <itemizedlist>
      <listitem>
        <para>All Java files must contain the license header.</para>
      </listitem>
      <listitem>
        <para>Place an @author tag in every file that you edit. The
        'maintainer' (either the original author, or the person
        currently overseeing the code) should be first, and then all
        other authors follow. Don't be shy - anything from spelling
        corrections in the JavaDoc through to re-writing a whole
        method counts.</para>
      </listitem>
      <listitem>
        <para>Always indent with spaces, not tabs. This makes it much
        easier for those of us with tab-paranoid editors.</para>
      </listitem>
      <listitem>
        <para>Javadoc all interface methods fully. An interface is
        defined by the method signatures, clear documentation and a
        reference implementation.</para>
      </listitem>
      <listitem>
        <para> Javadoc class methods when they are not implementing an
        interface method. Javadoc methods that implement an interface
        method only if clarification is needed, otherwise trust the
        documentation inheritance.</para>
      </listitem>
      <listitem>
        <para>Methods should nearly always specify types by interface,
        not concrete implementations. This makes it easier to extend
        the code later.</para>
      </listitem>
      <listitem>
        <para>With every interface X that defines a useful object,
        provide an implementation named SimpleX in the same package
        that is a plain, pure-Java reference version. This gives other
        people a clearer idea of what the interface is meant to
        encapsulate. It also often makes it obvious if something is
        missing.</para>
      </listitem>
      <listitem>
        <para>Add appropriate unit tests to the test suite for your
        new class(es). BioJava uses JUnit which makes this a quick and
        easy task.</para>
      </listitem>
    </itemizedlist>
  </appendix>

  <appendix label="C" id="bd-apdx03" xreflabel="Appendix C: Using DocBook">
    <title>Using DocBook</title>

    <sect1 id="bd-apdx03-whatis">
      <title>What is DocBook</title>

      <para>DocBook is a document authoring system which allows the
      structure and information content of a piece of work to be
      separated from the presentation formatting. Once the document is
      written, there are programs which do all the work of formatting
      it into an elegantly typeset printable document, a series of
      HTML pages or a PDF document, all from the single source.</para>

      <para>A DocBook document may be written in either Standard
      Generalized Markup Language (SGML) or Extensible Markup Language
      (XML). A Document Type Definition (DTD) which describes
      acceptable structure is available for each these forms.</para>
    </sect1>

    <sect1 id="bd-apdx03-why">
      <title>Why use DocBook?</title>

      <para>The advantage of this approach over an "all-in-one"
      system, such as a WYSIWYG word processor, is that the majority
      of the writing effort can be focussed on the document's content
      and structure. This is because layout and formatting are carried
      out automatically, leading to a shorter development cycle and
      greater consistency between the various presentation
      formats.</para>

      <para>Java has extensive support for XML document formats,
      making DocBook an obvious choice for BioJava. In addition, the
      tools available for processing SGML DocBook documents are also
      able to operate on XML DocBook documents.</para>
    </sect1>

    <sect1 id="bd-apdx03-biojava">
      <title>DocBook and the BioJava Documentation</title>

      <para>If all you need to do is refer to the documentation then
      you will not need to know anything about DocBook or have any of
      the DocBook processing tools installed. Regular builds of the
      documentation will be available from the FTP site in HTML and
      PostScript formats.</para>

      <para>The BioJava documentation aims to conform to both the
      DocBook SGML 4.1 and the DocBook XML 4.1.2 DTD. Currently the
      document is being validated against the SGML DTD, so the XML may
      not be fully compliant. This will be rectified when XML
      validation is added to the Ant build tasks.</para>
    </sect1>

    <sect1 id="bd-apdx03-resources">
      <title>DocBook resources</title>

      <para>There are many useful DocBook resources available,
      including software, examples and tutorials, some of which are
      listed here.</para>

      <sect2 id="bd-apdx03-resources-sware">
        <title>Software</title>

        <itemizedlist>
          <listitem>
            <para>The <ulink
            url="http://www.oasis-open.org/docbook/sgml/4.1">DocBook
            SGML 4.1</ulink> DTD.</para>
          </listitem>
          <listitem>
            <para>The <ulink
            url="http://www.oasis-open.org/xml/4.1.2">DocBook XML
            4.1.2</ulink> DTD.</para>
          </listitem>
          <listitem>
            <para>The <ulink
            url="http://openjade.sourceforge.net">OpenJade</ulink>
            rendering program which creates HTML, RTF and
            PostScript output from DocBook SGML and XML.</para>
          </listitem>
      </itemizedlist>
      </sect2>

      <sect2 id="bd-apdx03-resources-doc">
        <title>Documentation</title>

        <itemizedlist>
          <listitem>
            <para>The <ulink
            url="http://www.linuxdoc.org/HOWTO/mini/DocBook-Install">
            Linux DocBook Install mini-HOWTO</ulink>, a detailed,
            practical guide for obtaining quick results from
            DocBook.</para>
          </listitem>
          <listitem>
            <para>The LDP Author Guide from the <ulink
            url="http://linuxdoc.org">Linux Documentation
            Project</ulink>, a comprehensive guide to all aspects of
            DocBook authoring.</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
  </appendix>
</book>
