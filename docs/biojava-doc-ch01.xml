<!--DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN"
                         "/usr/share/sgml/docbook/sgml-dtd-4.1/docbook.dtd" [
]-->

<!-- This demonstrates the id convention for chapters -->
<chapter id="bd-ch01">
  <title>Beginning BioJava</title>

  <sect1 id="bd-ch01-obtain">
    <title>Obtaining</title>

    <sect2 id="bd-ch01-obtain-bin">
      <title>Binary distribution</title>

      <para>Binary distributions in .jar (Java ARchive) format may be
      obtained from the <ulink
      url="http://biojava.org/download/binaries/">binaries
      directory</ulink> of the web site <ulink
      url="http://biojava.org/download/">download area</ulink>.</para>
    </sect2>

    <sect2 id="bd-ch01-obtain-src">
      <title>Source code distribution</title>

      <para>If you want to modify BioJava, you can obtain a copy of
      the source code from the <ulink
      url="http://biojava.org/download/source/">source
      directory</ulink> of the web site <ulink
      url="http://biojava.org/download/">download area</ulink>. Source
      releases are distributed in .tar.gz format for Unix machines and
      as ZIP archives for Windows users. You can also obtain
      up-to-the-minute source code from the <ulink
      url="http://cvs.biojava.org">anonymous CVS
      server</ulink>.</para>
    </sect2>

    <sect2 id="bd-ch01-obtain-cvs">
      <title>Anonymous CVS server</title>

      <para>To download source code from anonymous CVS:</para>
      <procedure>
        <step>
          <para>Make sure that you have CVS installed.</para>
        </step>
        <step>
          <para>Login to the server</para>
            <substeps>
            <step>
              <para>Enter <userinput>cvs -d
              :pserver:cvs@biojava.org:/home/repository/biojava
              login</userinput></para>
            </step>
            <step>
              <para>When prompted the password is <userinput>cvs</userinput></para>
            </step>
          </substeps>
        </step>
        <step>
          <para>Checkout any packages that you are interested in. The
          best way to determine which packages are available is to
          browse them with the web interface. The main package (the
          HEAD of the development CVS) is called
          <parameter>biojava-live</parameter>.</para> <para>Enter
          <userinput>cvs -d
          :pserver:cvs@biojava.org:/home/repository/biojava checkout
          biojava-live</userinput></para>
        </step>
        <step>
          <para>The login and checkout procedures should only need to
          be done once. From this point you can recieve the latest
          updates by moving to the top directory of the checkout and
          entering <userinput>cvs update -dP</userinput>. (The -d
          option will automatically create new directories which exist
          in the repository, but not in your checkout. The -P option
          will remove redundant, empty directories from your
          checkout.</para>
        </step>
      </procedure>
    </sect2>

    <sect2 id="bd-ch01-depend">
      <title>Dependencies</title>

      <para>BioJava will compile and run on any computer with a Java
      virtual machine complying to the Java 2 Standard Edition 1.2 (or
      later) specifications.</para>

      <note>
        <para>We have seen some problems due to a bug in the Classic
        VM in Java 1.2. Hotspot for Java 1.2 works fine, as does the
        Classic VM from later releases.</para
      </note>

      <para>BioJava requires the following software packages:</para>
      <itemizedlist>
        <listitem>
          <para>A Java bytecode generation library (bytecode-0.90.jar)
          which may be obtained from the <ulink
          url="http://biojava.org/download/binaries/">binaries
          directory</ulink> of the web site <ulink
          url="http://biojava.org/download/">download
          area</ulink>.</para>
        </listitem>
        <listitem>
          <para>The <ulink url="http://xml.apache.org">Xerces-J XML
          parser</ulink>.</para>
        </listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <sect1 id="bd-ch01-install">
    <title>Installation</title>

    <sect2 id="bd-ch01-install-bin">
      <title>Binary distribution</title>

      <para>To use the binary distribution add the biojava.jar,
      bytecode.jar and xerces.jar files to your CLASSPATH environment
      variable.</para>

      <variablelist>
        <varlistentry>
          <term>UNIX (bourne shell)</term>
          <listitem>
            <para>
              <screen>
export CLASSPATH=/usr/local/share/java/biojava.jar:\
/usr/local/share/java/xerces.jar:\
/usr/local/share/java/bytecode.jar:.
              </screen>
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>UNIX (C shell)</term>
          <listitem>
            <para>
              <screen>
setenv CLASSPATH /usr/local/share/java/biojava.jar:\
/usr/local/share/java/xerces.jar:\
/usr/local/share/java/bytecode.jar:.
              </screen>
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Windows from command line</term>
          <listitem>
            <para>
              <screen>
set CLASSPATH C:\biojava.jar;C:\xerces.jar;C:\bytecode.jar;.
              </screen>
             </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Windows from autoexec.bat</term>
          <listitem>
            <para>
              <screen>
set CLASSPATH=C:\biojava.jar;C:\xerces.jar;C:\bytecode.jar;.
              </screen>
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="bd-ch01-install-src">
      <title>Source distribution</title>

      <para>BioJava uses the <ulink
      url="http://jakarta.apache.org/ant">Ant build tool</ulink>, a
      Java equivalent of the common Make utilities. You will need to
      obtain and install a copy of Ant.</para>

      <para>If you want to run the unit tests, you will need to obtain
      and install a copy of the <ulink
      url="http://www.junit.org">JUnit test framework</ulink>.</para>

      <para>The Ant build file has the standard name of "build.xml"
      and contains a number of targets. The default target is
      <parameter>package</parameter> which will build the .jar
      file. Other useful targets include:</para>

      <variablelist>
        <varlistentry>
          <term><parameter>runtests</parameter></term>
          <listitem>
            <para>This target will run the JUnit tests if you have
            JUnit and Ant version 1.3 or later installed.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>compile-demos</parameter></term>
          <listitem>
            <para>Will build the demo programs.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>javadocs</parameter></term>
          <listitem>
            <para>Will build the JavaDoc documentation.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>BioJava contains some classes which require Java
      1.4. However, the build will only compile and jar these classes
      if Java 1.4 is detected.</para>
    </sect2>
  </sect1>

  <sect1 id="bd-ch01-demos">
    <title>Running the demo programs</title>

    <para></para>
  </sect1>
</chapter>