Welcome to BioJava.

BioJava is an open-source initiative with the aim of providing the
biological community with objects for representing and manipulating
biological information. We hope that it becomes the one-stop solution for
every-day biological programming.

This distribution contains the biojava classes and resources, along with
scripts for building the .class files and the documentation tree. The CVS
directories are arranged as follows:

biojava-live
 |
 |- src : java source files and package documentation
 |
 |- resources : resource files - images, xml documents
 |
 |- tests : java unit test source files
 |
 |- reports : reports (currently test logs)
 |
 |- build : scripts for managing your copy of the repository
 |
 |- demos : demo programs that test useful functionality

BioJava relies on the Xerces-J XML parser, supplied by the Apache
Software Foundation.  We currently include Xerces-J 1.1.3 in the
source tree.  For more information, see:

  http://xml.apache.org/xerces-j/index.html

In addition, the scripts will generate the non-cvs directories docs and
class, which will contain the javadoc documentation and the class files.

To build the project, change to biojava-live and type:

> javac build/Builder.java
> java build.Builder all
> java build.Builder docs

to build a list of packages type:

> java build.Builder package package1 package2 ... packageN

If you use the Java based build tool Ant, supplied by the Apache
Jakarta Project (see http://jakarta.apache.org) you can use it to build
BioJava. To build the project, change to biojava-live and type:

ant package
ant javadocs

If you have Ant >= 1.3 and the Java based unit testing tool JUnit (see
http://www.junit.org) you can run the supplied tests. To build and run
the tests, change to biojava-live and type:

ant runtests

To check for edits type:

> cvs update
and then for each directory under src with at least one modified file, build
the package.

To use biojava, put biojava.jar and xml.jar into your classpath.

To build and run the demos:

make sure that biojava.jar and xerces.jar are in your classpath.
change into the demos directory, and make sure that it is also in your
classpath. type:

> javac demoDir/demoName.java
> java demoDir.demoName

e.g.

> javac dp/Dice.java
> java dp.Dice

on unix systems, you may be able to build all of the demos at once by typing:

> find . -name "*.java" | xargs javac

Most demos have either a comment explaining their purpose, or will print out a
usage message when run without arguments.

Contact Matthew Pocock (mrp@sanger.ac.uk) for more details, or mail the
biojava mailing list (biojava-l@biojava.org).




     This product includes software developed by the
     Apache Software Foundation (http://www.apache.org/).
