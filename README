Welcome to BioJava.

BioJava is an open-source initiative with the aim of providing the
biological community with objects for representing and manipulating
biological information. We hope that it becomes the one-stop solution for
every-day biological programming.

This distribution contains the BioJava classes and resources, along with
scripts for building the .class files and the documentation tree. The CVS
directories are arranged as follows:

biojava-live
 |
 |- apps : Java source files for user applications
 |
 |- demos : a selection of demo programs
 |
 |- demos-1.4 : demo programs which require Java 1.4
 |
 |- demos-obsolete : demo programs for deperecated API
 |
 |- docs : documentation
 |
 |- manifest : manifest file for building jars
 |
 |- reports : reports (currently test logs)
 |
 |- resources : resource files - images, xml documents
 |
 |- src : Java source files and package documentation
 |
 |- src-1.4 : Java source files which require Java 1.4
 |
 |- tests : Java unit test source files
 |

BioJava relies on the Xerces-J XML parser, supplied by the Apache
Software Foundation.  We currently include Xerces-J 1.1.3 in the
source tree.  For more information, see:

  http://xml.apache.org/xerces-j/index.html

BioJava uses the CLI component of the Jakarta Commons project for its
user application components.  We currently include CLI 1.0 in the
source tree.  For more information, see:

  http://jakarta.apache.org

BioJava now uses the Java based build tool Ant, supplied by the Apache
Jakarta Project (see http://jakarta.apache.org). To build the project,
change to biojava-live and type:

ant package
ant javadocs

Ant will automatically detect Java 1.4 and build the optional source
files which require this version.

If you have Ant >= 1.3 and the Java based unit testing tool JUnit (see
http://www.junit.org) you can run the supplied tests. To build and run
the tests, change directory to biojava-live and type:

ant runtests

To check for edits type:

> cvs update
and then for each directory under src with at least one modified file, build
the package.

To use biojava, put biojava.jar, bytecode.jar and xerces.jar into your
classpath.

BioJava now uses Ant to build the demos. To build the demos, change
directory to biojava-live and type:

ant compile-demos

Ant will automatically detect Java 1.4 and build the optional demo
source files which require this version.

To run the demos change directory to demos. Most have either a comment
explaining their purpose, or will print out a usage message when run
without arguments.

Mail the BioJava mailing list (biojava-l@biojava.org) for more details.




     This product includes software developed by the
     Apache Software Foundation (http://www.apache.org/).
